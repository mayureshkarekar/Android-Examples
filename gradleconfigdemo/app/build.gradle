apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            storeFile file('sample.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'key0'
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.gradleconfigdemo"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            applicationIdSuffix ".release"
            versionNameSuffix "-Release"
            resValue("string", "server_name", "Thor")
            buildConfigField "String", "BASE_URL", '"https://www.release.com"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-Debug"
            resValue("string", "server_name", "Captain America")
            buildConfigField "String", "BASE_URL", '"https://www.debug.com"'
        }
        staging {
            initWith debug
            applicationIdSuffix ".staging"
            versionNameSuffix "-Staging"
            resValue("string", "server_name", "Iron man")
            buildConfigField "String", "BASE_URL", '"https://www.staging.com"'
        }
    }

    flavorDimensions "version", "api"
    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-Free"
        }
        paid {
            dimension "version"
            applicationIdSuffix ".paid"
            versionNameSuffix "-Paid"
        }
        minSdk29 {
            dimension "api"
            minSdkVersion 29
            versionCode 3000 + android.defaultConfig.versionCode
            versionNameSuffix "-MinSDK29"
        }
        minSdk21 {
            dimension "api"
            minSdkVersion 21
            versionCode 2000 + android.defaultConfig.versionCode
            versionNameSuffix "-MinSDK21"
        }
        minSdk14 {
            dimension "api"
            minSdkVersion 14
            versionCode 1000 + android.defaultConfig.versionCode
            versionNameSuffix "-MinSDK14"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("minSdk14") && names.contains("free")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}